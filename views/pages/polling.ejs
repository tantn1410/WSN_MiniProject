<script>
  let humidsData = []
  let tempsData = []

  const handleHumids = (humids) => {
    const newhumids = []
    for(let humid of humids) {
      const {id, value} = humid
      if(humidsData.length && humidsData[humidsData.length - 1][1] >= id) break
      newhumids.push([value, id])
    }
    for(let i = newhumids.length - 1; i >= 0; i--) {
      humidChart.data.datasets[0].data.push(newhumids[i][0])
      humidsData.push(newhumids[i])
    }
    if(humidsData.length > 60) {
      humidsData = humidsData.slice(humidsData.length - 60, humidsData.length)
    }
    while(humidChart.data.datasets[0].data.length > 60) {
      humidChart.data.datasets[0].data.shift()
    }
    humidChart.update()
  }

  const handleTemps = (temps) => {
    const newtemps = []
    for(let temp of temps) {
      const {id, value} = temp
      if(tempsData.length && tempsData[tempsData.length - 1][1] >= id) break
      newtemps.push([value, id])
    }
    for(let i = newtemps.length - 1; i >= 0; i--) {
      tempChart.data.datasets[1].data.push(newtemps[i][0])
      tempsData.push(newtemps[i])
    }
    if(tempsData.length > 60) {
      tempsData = tempsData.slice(tempsData.length - 60, tempsData.length)
    }
    while(tempChart.data.datasets[0].data.length > 60) {
      tempChart.data.datasets[0].data.shift()
    }
    tempChart.update()
  }

  const polling = async () => {
    try {
      const data = await (await fetch("http://localhost:3000/polling", {method: "GET"})).json()
      const {temps, humids, luxs} = data
      handleTemps(temps)
      handleHumids(humids)
      handleLuxs(luxs)
    } catch(err) {
      console.log(err)
    } finally {
      setTimeout(polling, 5000)
    }
  }
  setTimeout(polling, 0)
</script>
